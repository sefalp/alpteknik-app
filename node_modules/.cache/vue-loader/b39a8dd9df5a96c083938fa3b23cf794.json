{"remainingRequest":"C:\\Users\\alps\\Documents\\alpteknik-app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\alps\\Documents\\alpteknik-app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\alps\\Documents\\alpteknik-app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\alps\\Documents\\alpteknik-app\\src\\components\\Footer.vue?vue&type=template&id=40ab164b&","dependencies":[{"path":"C:\\Users\\alps\\Documents\\alpteknik-app\\src\\components\\Footer.vue","mtime":1603028098593},{"path":"C:\\Users\\alps\\Documents\\alpteknik-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1601649813022},{"path":"C:\\Users\\alps\\Documents\\alpteknik-app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1601649838197},{"path":"C:\\Users\\alps\\Documents\\alpteknik-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1601649813022},{"path":"C:\\Users\\alps\\Documents\\alpteknik-app\\node_modules\\vue-loader\\lib\\index.js","mtime":1601649838195}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}